// src/lib/pdf/loadFontAsBase64.ts
const fontBase64Cache = new Map<string, string>();

// generated by chatGPT
/**
 * Завантажує файл шрифту (TTF/OTF/WOFF/WOFF2) з public/ та повертає base64-рядок.
 * @param publicPath шлях відносно кореня сайту, напр. "/fonts/PTSans-Regular.ttf"
 * @returns base64 без data:-префікса
 */
export async function loadFontAsBase64(publicPath: string): Promise<string> {
  if (fontBase64Cache.has(publicPath)) {
    return fontBase64Cache.get(publicPath)!;
  }

  const res = await fetch(publicPath);
  if (!res.ok) {
    throw new Error(`Failed to fetch font: ${publicPath} (${res.status})`);
  }

  const buffer = await res.arrayBuffer();
  const base64 = arrayBufferToBase64(buffer);

  fontBase64Cache.set(publicPath, base64);
  return base64;
}

/** Конвертація ArrayBuffer → Base64 без перевищення call stack */
function arrayBufferToBase64(buffer: ArrayBuffer): string {
  const bytes = new Uint8Array(buffer);
  const chunkSize = 0x8000; // ~32KB
  let binary = '';

  for (let i = 0; i < bytes.length; i += chunkSize) {
    const chunk = bytes.subarray(i, i + chunkSize);
    binary += String.fromCharCode(...chunk);
  }
  // btoa очікує "binary string" (Latin-1)
  return btoa(binary);
}
